org.apache.tools.ant.helper.ProjectHelper2.parse(Lorg/apache/tools/ant/Project;Ljava/lang/Object;Lorg/apache/tools/ant/helper/ProjectHelper2$RootHandler;)V -> org.apache.tools.ant.BuildException.<init>(Ljava/lang/String;)V
org.apache.tools.zip.ZipFile$2.<init>(Lorg/apache/tools/zip/ZipFile;)V -> java.lang.Object.<init>()V
org.apache.tools.ant.Project.tsort(Ljava/lang/String;Ljava/util/Hashtable;Ljava/util/Hashtable;Ljava/util/Stack;Ljava/util/Vector;)V -> java.util.Hashtable.get(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.tools.ant.Main.processArgs([Ljava/lang/String;)V -> org.apache.tools.ant.ArgumentProcessorRegistry.getProcessors()Ljava/util/List;
org.apache.tools.ant.Project.topoSort([Ljava/lang/String;Ljava/util/Hashtable;Z)Ljava/util/Vector; -> java.lang.StringBuilder.<init>()V
org.apache.tools.zip.ZipEntry.mergeExtraFields([Lorg/apache/tools/zip/ZipExtraField;Z)V -> org.apache.tools.zip.UnparseableExtraFieldData.getLocalFileDataData()[B
org.apache.tools.zip.ZipEntry.addExtraField(Lorg/apache/tools/zip/ZipExtraField;)V -> org.apache.tools.zip.ZipEntry.getExtraField(Lorg/apache/tools/zip/ZipShort;)Lorg/apache/tools/zip/ZipExtraField;
org.apache.tools.zip.ZipEntry.getAllExtraFields()[Lorg/apache/tools/zip/ZipExtraField; -> org.apache.tools.zip.ZipEntry.getAllExtraFieldsNoCopy()[Lorg/apache/tools/zip/ZipExtraField;
org.apache.tools.ant.Diagnostics.doReportTempDir(Ljava/io/PrintStream;)V -> java.lang.System.currentTimeMillis()J
org.apache.tools.ant.Main.processArgs([Ljava/lang/String;)V -> org.apache.tools.ant.ProjectHelperRepository$ConstructingIterator.hasNext()Z
org.apache.tools.ant.helper.ProjectHelper2.<clinit>()V -> org.apache.tools.ant.helper.ProjectHelper2$MainHandler.<init>()V
org.apache.tools.ant.ProjectHelper$OnMissingExtensionPoint.<init>(Ljava/lang/String;)V -> java.lang.Object.<init>()V
org.apache.tools.ant.types.DataType.getCheckedRef(Ljava/lang/Class;Ljava/lang/String;Lorg/apache/tools/ant/Project;)Ljava/lang/Object; -> java.lang.StringBuilder.toString()Ljava/lang/String;
org.apache.tools.zip.ExtraFieldUtils.<clinit>()V -> java.util.concurrent.ConcurrentHashMap.<init>()V
org.apache.tools.ant.ArgumentProcessorRegistry.getProcessorByService(Ljava/io/InputStream;)Lorg/apache/tools/ant/ArgumentProcessor; -> java.io.BufferedReader.readLine()Ljava/lang/String;
org.apache.tools.ant.PropertyHelper.setProperty(Ljava/lang/String;Ljava/lang/Object;Z)Z -> java.lang.StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;
org.apache.tools.ant.util.JAXPUtils.newSAXParser(Ljavax/xml/parsers/SAXParserFactory;)Ljavax/xml/parsers/SAXParser; -> org.apache.tools.ant.BuildException.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
org.apache.tools.zip.ZipEntry.getName()Ljava/lang/String; -> java.util.zip.ZipEntry.getName()Ljava/lang/String;
org.apache.tools.ant.util.java15.ProxyDiagnostics.toString()Ljava/lang/String; -> java.lang.StringBuffer.<init>()V
org.apache.tools.ant.util.FileUtils.dissect(Ljava/lang/String;)[Ljava/lang/String; -> java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer;
org.apache.tools.ant.Project.getExecutor()Lorg/apache/tools/ant/Executor; -> org.apache.tools.ant.BuildException.toString()Ljava/lang/String;
org.apache.tools.ant.Diagnostics.doReportTempDir(Ljava/io/PrintStream;)V -> java.io.FileInputStream.<init>(Ljava/io/File;)V
org.apache.tools.ant.ProjectHelperRepository$ConstructingIterator.next()Ljava/lang/Object; -> org.apache.tools.ant.ProjectHelperRepository$ConstructingIterator.next()Lorg/apache/tools/ant/ProjectHelper;
